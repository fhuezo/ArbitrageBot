# ----- Solana Core -----
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
# Path to a local Solana keypair JSON file (array of 64 bytes)
WALLET_KEYPAIR_PATH=./keypair.json

# Optional (for Python crossDEX scripts only; not used by TS bot):
# Base58-encoded private key string (NOT mnemonic). Leave empty unless you know you need it.
# SOLANA_PRIVATE_KEY=


# ----- Tokens / Pairs -----
# Comma-separated symbols in quote order for scanning, e.g. GALA,SOL or SOL,USDC
TOKENS=GALA,SOL

# If a token is not builtin (only SOL and USDC are builtin), provide its mint/decimals:
# MINT_GALA=
# DECIMALS_GALA=8


# ----- Trading Parameters -----
# Global slippage tolerance used for minOut / maxIn calc (basis points)
SLIPPAGE_BPS=50
# Absolute minimum profit in USD to trigger execution
MIN_PROFIT_USD=2.5
# Optional: minimum edge in BPS; if set, opportunities below this are ignored
# MIN_PROFIT_BPS=30

# Maximum notional per leg (in USD) the bot considers for quotes
MAX_NOTIONAL_USD=200
# Optional cap: maximum SOL size for a single trade
# MAX_TRADE_SIZE_SOL=0.25

# Polling cadence (ms) for the main loop if SCAN_INTERVAL_SECONDS not set
POLL_INTERVAL_MS=1200
# Prefer this for fractional seconds (overrides POLL_INTERVAL_MS)
SCAN_INTERVAL_SECONDS=1.0

# Safety toggle: 1 = dry-run (no submissions), 0 = live (submit swaps if implemented)
DRY_RUN=1

# Optional daily trade cap (count)
# MAX_DAILY_TRADES=25


# ----- Priority Fees / Compute (advanced, Solana) -----
PRIORITY_FEE_MICROLAMPORTS=0
COMPUTE_UNIT_LIMIT=1200000
COMPUTE_UNIT_PRICE_MICROLAMPORTS=0


# ----- Raydium (TS adapter stub – fill when integrating SDK) -----
# If you know a specific Gala/SOL pool ID, add it (not used until Raydium SDK wired)
# RAYDIUM_GALA_SOL_POOL=
# Force-consider only specific pools (comma-separated IDs) – optional
# RAYDIUM_FORCE_POOLS=


# ----- GalaSwap (GalaDEX) -----
# Public HTTP API base for quotes/swaps
GALADEX_API_BASE=https://dex-backend-prod1.defi.gala.com

# Signer for GalaSwap API submissions (ETH-style private key hex, 0x-prefixed or not)
# WARNING: keep this secret safe. Do not commit .env
GALADEX_PRIVATE_KEY=

# User address for submissions. If omitted, it is derived from the private key.
# Accepts forms like: eth|<hexaddr>, client|<id>, or raw 0x... (we’ll normalize)
GALADEX_WALLET_ADDRESS=

# Fee tier used by GalaSwap API (basis points of 1e6 scale per Gala docs)
GALADEX_FEE_TIER=10000

# Optional: program ID if you’re decoding pools on-chain (not used by HTTP-only flow)
# GALADEX_PROGRAM_ID=
# Optional: limit to known pools (comma-separated IDs)
# GALADEX_FORCE_POOLS=


# ----- crossDEX (Python) optional toggles (ignored by TS bot) -----
# USE_JUPITER=true
# JUPITER_ONLY_RAYDIUM=true
# USE_GALADEX=true
# TEST_RAYDIUM_ONLY=false
# TEST_GALADEX_ONLY=false

# Performance tuning for the Python scripts (ignored by TS bot)
# MAX_PRICE_HISTORY_SIZE=100
# MAX_CONSECUTIVE_FAILURES=10
# PRICE_FETCH_TIMEOUT=0.8
# MAX_ALLOWED_CONSECUTIVE_FAILURES=5
# PERFORMANCE_LOG_INTERVAL_SECONDS=60
# POST_TRADE_SLEEP_SECONDS=2.0

# Raydium py unit budget/price (ignored by TS bot)
# UNIT_BUDGET=100000
# UNIT_PRICE=1000000
